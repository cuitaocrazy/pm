# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags: ["*"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-web-app:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - uses: docker/setup-buildx-action@v1.0.4
      - uses: actions/cache@v2.1.3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      # Runs a single command using the runners shell
      - name: build
        id: build
        run: |
          cd pm-web-app
          npm i
          npm run build
          VERSION=${GITHUB_REF##*/}
          echo ::set-output name=version::${VERSION}
      - uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_SECRET }}
      - uses: docker/build-push-action@v2.2.1
        with:
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/pm-web-app:${{ steps.build.outputs.version }}
          context: ./pm-web-app
          file: ./pm-web-app/Dockerfile
          push: true
  build-resource-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - uses: docker/setup-buildx-action@v1.0.4
      - uses: actions/cache@v2.1.3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: build
        id: build
        run: |
          cd pm-resource-server
          npm i
          npm run build
          VERSION=${GITHUB_REF##*/}
          echo ::set-output name=version::${VERSION}
      - uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_SECRET }}
      - uses: docker/build-push-action@v2.2.1
        with:
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/pm-resource-server:${{ steps.build.outputs.version }}
          context: ./pm-resource-server
          file: ./pm-resource-server/Dockerfile
          push: true
  build-daily-notify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - uses: docker/setup-buildx-action@v1.0.4
      - uses: actions/cache@v2.1.3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: build
        id: build
        run: |
          cd pm-daily-notify
          npm i
          npm run build
          VERSION=${GITHUB_REF##*/}
          echo ::set-output name=version::${VERSION}
      - uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_SECRET }}
      - uses: docker/build-push-action@v2.2.1
        with:
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/pm-daily-notify:${{ steps.build.outputs.version }}
          context: ./pm-daily-notify
          file: ./pm-daily-notify/Dockerfile
          push: true
  build-gw:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: 11
      - uses: docker/setup-buildx-action@v1.0.4
      - uses: actions/cache@v2.1.3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: build
        id: build
        run: |
          cd oauth-gw
          ./gradlew build
          VERSION=${GITHUB_REF##*/}
          echo ::set-output name=version::${VERSION}
      - uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_SECRET }}
      - uses: docker/build-push-action@v2.2.1
        with:
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/oauth-gw:${{ steps.build.outputs.version }}
          context: ./oauth-gw
          file: ./oauth-gw/Dockerfile
          push: true
  webhook:
    runs-on: ubuntu-latest
    needs: [build-web-app, build-resource-server, build-daily-notify, build-gw]
    steps:
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: webhook
        run: |
          wget https://pm.yadashuke.com/upgrade -O /dev/null
          wget https://pm.yadashuke.com/upgrade -O /dev/null
